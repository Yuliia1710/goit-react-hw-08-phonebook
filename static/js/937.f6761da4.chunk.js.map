{"version":3,"file":"static/js/937.f6761da4.chunk.js","mappings":"yTAGaA,GAAQC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2GAOLE,EAAOF,EAAAA,EAAAA,IAAH,mHAOJG,EAAQH,EAAAA,EAAAA,MAAH,qEAKLI,GAAQJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,+NAYLM,EAASN,EAAAA,EAAAA,OAAH,mkB,uJCiCnB,EAtDqB,WACnB,IAAMO,GAAWC,EAAAA,EAAAA,MACXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KAAaG,SAAS,yBAC5BC,MAAOJ,EAAAA,KAAaI,QAAQD,SAAS,0BACrCE,SAAUL,EAAAA,KACPG,SAAS,mCACTG,IAAI,EAAG,sDACPC,QAAQ,WAAY,8CAEzB,GAAeC,EAAAA,EAAAA,UAAS,IAAjBN,GAAP,eACA,GAAgBM,EAAAA,EAAAA,UAAS,IAAlBJ,GAAP,eACA,GAAmBI,EAAAA,EAAAA,UAAS,IAArBH,GAAP,eAMA,OACE,SAAC,KAAD,CACEI,cAAe,CAAEP,KAAAA,EAAME,MAAAA,EAAOC,SAAAA,GAC9BK,SARiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9Bf,GAASgB,EAAAA,EAAAA,UAASF,IAElBC,GACD,EAKGE,iBAAkBf,EAHpB,UAKE,UAAC,KAAD,CAAOgB,aAAa,MAApB,WACE,0CACA,UAAC,KAAD,YACE,UAAC,KAAD,CAAOC,QAAQ,OAAf,kBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOf,KAAK,OAAOgB,YAAY,eAC3C,SAAC,KAAD,CAAcC,UAAU,MAAMjB,KAAK,aAErC,UAAC,KAAD,CAAOc,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,QAAQf,KAAK,QAAQgB,YAAY,gBAC7C,SAAC,KAAD,CAAcC,UAAU,MAAMjB,KAAK,cAErC,UAAC,KAAD,CAAOc,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLf,KAAK,WACLgB,YAAY,mBAEd,SAAC,KAAD,CAAcC,UAAU,MAAMjB,KAAK,oBAIvC,SAAC,KAAD,CAAQe,KAAK,SAAb,0BAIP,EC/Dc,SAASG,IACtB,OACE,4BACE,6CACA,SAAC,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Registration.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: 10px;\n  width: 140px;\n  height: 20px;\n  /* border: none;\n  outline: none; */\n  /* outline: 2px solid tomato; */\n\n  padding: 10px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 40px;\n\n  background-color: darkblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n  border-width: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(30 / 16);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  letter-spacing: 0.06em;\n\n  color: #ffffff;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear, transform 250ms linear;\n\n  align-self: center;\n\n  :hover {\n    background-color: darkorchid;\n    transform: scale(1.1);\n  }\n`;\n","import {\n  Button,\n  Forma,\n  Input,\n  Label,\n  Wrap,\n} from 'components/LoginForm/LoginForm.styled';\nimport { ErrorMessage, Formik } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\nimport * as Yup from 'yup';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const schema = Yup.object().shape({\n    name: Yup.string().required('Please provide a name'),\n    email: Yup.string().email().required('Please provide a email'),\n    password: Yup.string()\n      .required('Please provide a valid password')\n      .min(8, 'Password is too short - should be 8 chars minimum.')\n      .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n  });\n  const [name] = useState('');\n  const [email] = useState('');\n  const [password] = useState('');\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={{ name, email, password }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Forma autoComplete=\"off\">\n        <h2>Registration</h2>\n        <Wrap>\n          <Label htmlFor=\"name\">\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"Your name\" />\n            <ErrorMessage component=\"div\" name=\"name\" />\n          </Label>\n          <Label htmlFor=\"email\">\n            Email\n            <Input type=\"email\" name=\"email\" placeholder=\"Your email\" />\n            <ErrorMessage component=\"div\" name=\"email\" />\n          </Label>\n          <Label htmlFor=\"password\">\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"Your password\"\n            />\n            <ErrorMessage component=\"div\" name=\"password\" />\n          </Label>\n        </Wrap>\n\n        <Button type=\"submit\">Register</Button>\n      </Forma>\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <div>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Forma","styled","Form","Wrap","Label","Input","Field","Button","dispatch","useDispatch","schema","Yup","shape","name","required","email","password","min","matches","useState","initialValues","onSubmit","values","resetForm","register","validationSchema","autoComplete","htmlFor","type","placeholder","component","Register"],"sourceRoot":""}