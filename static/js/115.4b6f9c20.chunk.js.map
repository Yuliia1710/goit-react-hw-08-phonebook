{"version":3,"file":"static/js/115.4b6f9c20.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.jsx","../node_modules/nanoid/index.browser.js","redux/contacts/contactsSelectors.js","components/Filter/Filter.styled.jsx","components/ContactsForm/ContactsForm.jsx","redux/filter/filterSelectors.js","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n`;\n\nexport const Wrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled(Field)`\n  border-radius: 10px;\n  width: 140px;\n  height: 20px;\n  /* border: none;\n  outline: none; */\n  /* outline: 2px solid tomato; */\n\n  padding: 10px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n\nexport const Button = styled.button`\n  width: 200px;\n  height: 40px;\n\n  background-color: darkblue;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  border-radius: 10px;\n  border-width: 0;\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: calc(30 / 16);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  letter-spacing: 0.06em;\n\n  color: #ffffff;\n\n  cursor: pointer;\n\n  transition: background-color 250ms linear, transform 250ms linear;\n\n  align-self: center;\n\n  :hover {\n    background-color: darkorchid;\n    transform: scale(1.1);\n  }\n`;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Input = styled(Field)`\n  border-radius: 10px;\n  width: 200px;\n  height: 20px;\n  padding: 10px;\n  border: 1px solid rgba(33, 33, 33, 0.2);\n`;\n","import { ErrorMessage, Formik } from 'formik';\nimport { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport { addContact } from 'redux/contacts/contactsOperations';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport {\n  Button,\n  Forma,\n  Label,\n  Wrap,\n} from 'components/LoginForm/LoginForm.styled';\nimport { Input } from 'components/Filter/Filter.styled';\n\nconst phoneRegExp =\n  /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\nconst schema = Yup.object().shape({\n  name: Yup.string().required(),\n  number: Yup.string()\n    .required()\n    .matches(phoneRegExp, 'Phone number is not valid')\n    .min(10, 'too short')\n    .max(10, 'too long'),\n});\n\nconst ContactsForm = () => {\n  const [name] = useState('');\n  const [number] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const handleSubmit = (values, { resetForm }) => {\n    const newContact = {\n      id: nanoid(4),\n      ...values,\n    };\n    if (checkNewNameRepeate(values.name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    } else {\n      dispatch(addContact(newContact));\n    }\n    resetForm();\n  };\n  const checkNewNameRepeate = newName => {\n    let arrayOfNamesInLowerCase = contacts.map(item =>\n      item.name.toLocaleLowerCase()\n    );\n    return arrayOfNamesInLowerCase.includes(newName.toLocaleLowerCase());\n  };\n  return (\n    <Formik\n      initialValues={{ name, number }}\n      onSubmit={handleSubmit}\n      validationSchema={schema}\n    >\n      <Forma autoComplete=\"off\">\n        <Wrap>\n          <Label htmlFor=\"name\">\n            Name\n            <Input type=\"text\" name=\"name\" placeholder=\"Your name\" />\n            <ErrorMessage component=\"div\" name=\"name\" />\n          </Label>\n          <Label htmlFor=\"number\">\n            Number\n            <Input type=\"tel\" name=\"number\" placeholder=\"Your number\" />\n            <ErrorMessage component=\"div\" name=\"number\" />\n          </Label>\n        </Wrap>\n        <Button type=\"submit\">Add contact</Button>\n      </Forma>\n    </Formik>\n  );\n};\n\nexport default ContactsForm;\n","export const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  padding: 10px;\n`;\n\nexport const Name = styled.p`\n  font-weight: bold;\n  margin-right: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from 'redux/contacts/contactsOperations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/contactsSelectors';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { Li, Name, Ul } from './ContactsList.styled';\n\nimport { useEffect } from 'react';\nimport { StyledButton } from 'components/UserMenu/UserMenu.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const filter = useSelector(selectFilter);\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase().trim())\n  );\n  return (\n    <>\n      {isLoading && <p>Loading tasks...</p>}\n      {error && <p>{error}</p>}\n\n      {filteredContacts.length > 0 && (\n        <Ul>\n          {filteredContacts.map(item => {\n            return (\n              <Li key={item.id}>\n                <Name>{item.name}: </Name> <p>{item.number}</p>\n                <StyledButton\n                  type=\"button\"\n                  onClick={() => dispatch(deleteContact(item.id))}\n                >\n                  Delete\n                </StyledButton>\n              </Li>\n            );\n          })}\n        </Ul>\n      )}\n    </>\n  );\n};\nexport default ContactList;\n","import { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/filter/filterSelectors';\nimport { editFilter } from 'redux/filter/filterSlice';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const value = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleChangeFilter = e => {\n    dispatch(editFilter(e.currentTarget.value));\n  };\n  return (\n    <Formik>\n      <Input\n        placeholder=\"Search Contact\"\n        onChange={handleChangeFilter}\n        value={value}\n      />\n    </Formik>\n  );\n};\n\nexport default Filter;\n","import ContactsForm from 'components/ContactsForm/ContactsForm';\nimport ContactList from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactsForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["Forma","styled","Form","Wrap","Label","Input","Field","Button","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","selectContacts","state","contacts","items","selectError","error","selectIsLoading","isLoading","schema","Yup","shape","name","required","number","matches","min","max","useState","useSelector","dispatch","useDispatch","checkNewNameRepeate","newName","map","item","toLocaleLowerCase","includes","initialValues","onSubmit","values","resetForm","newContact","alert","addContact","validationSchema","autoComplete","htmlFor","type","placeholder","component","selectFilter","filter","Ul","Li","Name","useEffect","fetchContacts","filteredContacts","trim","length","onClick","deleteContact","value","onChange","e","editFilter","currentTarget"],"sourceRoot":""}